# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["aiohttp", "httpx", "watchdog"]

# MyPy type checking
[tool.mypy]
python_version = "3.13"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_missing_imports = true
follow_imports = "silent"

# Bandit security linting
[tool.bandit]
skips = ["B101"]  # Skip assert_used test

# Flake8 would go in setup.cfg or .flake8, but we'll use pyproject.toml compatible tools

# Ruff - Modern Python linter and formatter
[tool.ruff]
target-version = "py311"
line-length = 88

# Enable specific rule sets
lint.select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "I",      # isort (import sorting)
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "UP",     # pyupgrade
]

# Ignore specific rules that are too strict for this project
lint.ignore = [
    "E501",   # Line too long (handled by formatter)
    "E203",   # Whitespace before ':' (formatter handles this)
    "SIM105", # Use contextlib.suppress (preference - explicit is clearer)
    "SIM108", # Use ternary operator (preference - if/else can be clearer)
    "SIM103", # Return condition directly (preference - explicit return is clearer)
]

# Exclude patterns
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    ".pytest_cache",
    "htmlcov",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"main.py" = ["T201"]
"tests/*" = ["S101"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["src"]
known-third-party = ["aiohttp", "httpx", "watchdog"]
